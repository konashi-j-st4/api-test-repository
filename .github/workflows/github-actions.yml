name: Deploy-AWS-CloudFormation
 
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
 
env: 
  TEMPLATE_FILE: template.yml
  CONFIG_ENV: sample

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions: 
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: |
          # Lambda関数用の依存関係をapp.pyと同じ階層にインストール
          pip install -r requirements.txt -t .

      - name: Install dependencies for test
        run: |
          # テスト実行用の依存関係をグローバルにインストール
          pip install -r requirements.txt

      - name: Unit-test
        id: unit-test
        continue-on-error: true
        run: |
          export REPOSITORY_HOME=$(pwd)
          cd tests/
          pytest -v --cov --cov-branch --cov-report=html test_hello_world.py
          cd ${REPOSITORY_HOME}

      - name: Setup aws-sam
        if: steps.unit-test.outcome == 'success'
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        if: steps.unit-test.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::487002575802:role/github-cicd-role

      - name: Build & Deploy Cloudformation stacks
        if: steps.unit-test.outcome == 'success'
        run: |
          sam build --use-container --config-env ${CONFIG_ENV} --template-file ${TEMPLATE_FILE} --parameter-overrides \
            CompanyName=shift \
            ProjectName=blog \
            DBUserName=${{ secrets.DB_USER_NAME }} \
            DBPassword=${{ secrets.DB_PASSWORD }} \
            DBEndPoint=${{ secrets.DB_END_POINT }} \
            DBName=${{ secrets.DB_NAME }} \
            DBPort=${{ secrets.DB_PORT }}
          
          sam deploy --config-env ${CONFIG_ENV} --template-file ${TEMPLATE_FILE} --parameter-overrides \
            CompanyName=shift \
            ProjectName=blog \
            DBUserName=${{ secrets.DB_USER_NAME }} \
            DBPassword=${{ secrets.DB_PASSWORD }} \
            DBEndPoint=${{ secrets.DB_END_POINT }} \
            DBName=${{ secrets.DB_NAME }} \
            DBPort=${{ secrets.DB_PORT }}
